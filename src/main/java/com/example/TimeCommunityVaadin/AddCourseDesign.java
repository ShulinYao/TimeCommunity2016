package com.example.TimeCommunityVaadin;

import java.util.Date;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.DesignRoot;
import com.vaadin.data.fieldgroup.FieldGroup;
import com.vaadin.data.fieldgroup.FieldGroup.CommitException;
import com.vaadin.data.util.ObjectProperty;
import com.vaadin.data.util.PropertysetItem;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.DateField;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.Notification;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.declarative.Design;

/** 
 * !! DO NOT EDIT THIS FILE !!
 * 
 * This class is generated by Vaadin Designer and will be overwritten.
 * 
 * Please make a subclass with logic and additional interfaces as needed,
 * e.g class LoginView extends LoginDesign implements View { }
 */
@DesignRoot
@AutoGenerated
@SuppressWarnings("serial")
public class AddCourseDesign extends VerticalLayout implements Button.ClickListener{
	protected TextField course;
	protected TextField courseCode;
	protected DateField time;
	protected TextField location;
	protected TextArea introduction;
	protected Button submitbutton;
	protected FormLayout courseformlayout;
	
	final FieldGroup binder;
	final PropertysetItem item;

	public AddCourseDesign() {
		Design.read(this);
		submitbutton.addClickListener(this);
		
		// Have an item with couple of properties
		item = new PropertysetItem();
		item.addItemProperty("coursenameid", new ObjectProperty<String>("",String.class));
		item.addItemProperty("coursecodeid",  new ObjectProperty<String>("", String.class));
		item.addItemProperty("coursetimeid",  new ObjectProperty<Date>(null, Date.class));
		item.addItemProperty("courselocationid",  new ObjectProperty<String>("", String.class));
		item.addItemProperty("courseintroductionid",  new ObjectProperty<String>("", String.class));
		
		

		
		//  bind the fields using the default field factory
	    binder = new FieldGroup(item);
		binder.bind(course, "coursenameid");
	    binder.bind(courseCode, "coursecodeid");
	    binder.bind(time, "coursetimeid");
	    binder.bind(location, "courselocationid");
	    binder.bind(introduction, "courseintroductionid");

		// Enable buffering (actually enabled by default)
		binder.setBuffered(true);
		       
	}

	@Override
	public void buttonClick(ClickEvent event) {
		// TODO Auto-generated method stub
		      try {
		    	  int i=1;   	 
				binder.commit();
				i++;
			// Notification.show("hello"+item.getItemProperty("coursenameid").getValue().toString());
			    new CommunityViewDesign().initTable(item,i);
			    //new CommunityViewDesign().Coursetable();
			 // Notification.show("hello"+String.valueOf(i));
			} catch (CommitException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		      
		      
	}
}
